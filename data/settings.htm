<!DOCTYPE html>
<html>
<!-- Load the file with globals first as a classic script -->
<script src="/globals.js"></script>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>ESP32 Projector Control</title>

    <!-- Link to the external CSS file -->
    <link rel="stylesheet" href="/remote.css">

    <style>
        /* -- Global Styles -- */
        body {
            background-color: #1a1a1a;
            color: #e0e0e0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            /* Aligns content to the top */
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
        }

        .remote-container {
            background-color: #2c2c2c;
            border-radius: 25px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            width: 100%;
            max-width: 450px;
            text-align: center;
            animation: fade-in 0.5s ease-in-out;
            margin-top: 20px;
            /* Space from the top */
        }

        h1 {
            font-size: 1.8em;
            font-weight: 500;
            color: #f5f5f5;
            margin-bottom: 25px;
        }

        .form-section {
            border: 1px solid #3f3f3f;
            background-color: #3f3f3f;
            border-radius: 12px;
            padding: 15px;
            margin-bottom: 20px;
            text-align: left;
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        h3 {
            margin-top: 0;
            color: #f5f5f5;
            font-size: 1.2em;
        }

        label {
            display: block;
            margin: 10px 0 5px;
            font-weight: bold;
            color: #e0e0e0;
        }

        input[type=text],
        input[type=password],
        select {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #555;
            background-color: #2c2c2c;
            color: #e0e0e0;
            border-radius: 8px;
            box-sizing: border-box;
        }

        input[type=submit] {
            background-color: #007bff;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
            transition: background-color 0.2s;
        }

        input[type=submit]:hover {
            background-color: #0056b3;
        }

        .error-message {
            color: #dc3545;
            font-size: 12px;
            display: block;
            /* Always visible for dark background */
            margin-top: -8px;
            margin-bottom: 10px;
        }
    </style>
</head>

<body>

    <div class="remote-container">
        <h1 id="main-heading">ESP32 Projector Control</h1>
        <script>
            const mainHeadingElement = document.getElementById("main-heading");
            mainHeadingElement.textContent = "ESP32 Settings : " + headingTxt;
        </script>
        <!-- Projector Wake Packet Form -->
        <div class="form-section">
            <h3>Projector Wake Packet</h3>
            <form action="/wake-packet" method="post">
                <label for="projector-select">Select Projector:</label>
                <select id="projector-select" name="projector">

                </select>
                <input type="submit" value="Update Wake Projector">
            </form>
        </div>

        <script>

            const selectElement = document.getElementById("projector-select");
            for (let i = 0; i < projectorList.length; i++) {
                const text = projectorList[i][0]; // The display text
                const value = projectorList[i][1]; // The option's value

                // Create a new option element
                const option = document.createElement("option");

                // Set the option's text and value
                option.textContent = text;
                option.value = value;

                // Append the option to the select element
                selectElement.appendChild(option);
            }
            selectElement.selectedIndex = projSelected; 
        </script>

        <!-- 2-Byte Hex Input Form -->
        <div class="form-section">
            <h3>Send 2-Byte Hex Input</h3>
            <form action="/send-2byte" method="post">
                <label for="2byte-input">2-Byte Hex Value:</label>
                <input type="text" id="2byte-input" name="hex2byte" value="0000" pattern="[0-9a-fA-F]{4}" required
                    title="Input must be exactly 4 hexadecimal digits (e.g., 00 or FF)"
                    oninvalid="this.setCustomValidity('Please enter a valid 2-byte hex value.')"
                    oninput="this.setCustomValidity('')">
                <input type="submit" value="Send 2-Byte Value">
            </form>
        </div>

        <!-- 8-Byte Hex Input Form -->
        <div class="form-section">
            <h3>Send 8-Byte Hex Input</h3>
            <form action="/send-8byte" method="post">
                <label for="8byte-input">8-Byte Hex Value:</label>
                <input type="text" id="8byte-input" name="hex8byte" value="0000000000000000" pattern="[0-9a-fA-F]{16}"
                    required title="Input must be exactly 16 hexadecimal digits (8 bytes)"
                    oninvalid="this.setCustomValidity('Please enter a valid 8-byte hex value.')"
                    oninput="this.setCustomValidity('')">
                <input type="submit" value="Send 8-Byte Value">
            </form>
        </div>

        <!-- Admin Password Change Form -->
        <div class="form-section">
            <h3>Change Admin Password</h3>
            <form action="/change-password" method="post">
                <label for="new-password">New Password:</label>
                <input type="password" id="new-password" name="newPassword" required>
                <input type="submit" value="Change Password">
            </form>
        </div>

        <!-- Unit Hostname Change Form -->
        <div class="form-section">
            <h3>Change Unit Hostname</h3>
            <form action="/change-hostname" method="post">
                <label for="new-hostname">New Hostname:</label>
                <input type="text" id="new-hostname" name="newHostname" required>
                <input type="submit" value="Change Hostname">
            </form>
        </div>

        <!-- Unit Blutooth name Change Form -->
        <div class="form-section">
            <h3>Change Unit BlueTooth Name</h3>
            <form action="/change-bluename" method="post">
                <label for="new-BlueName">New BlueTooth Name:</label>
                <input type="text" id="new-bluename" name="newBlueName" required>
                <input type="submit" value="Change BlueTooth Name">
            </form>
        </div>

        <!-- SERVO name Change Form -->
        <div class="form-section">
            <h3>Change Servo IO pin</h3>
            <form action="/change-servoIOPIN" method="post">
                <label for="new-servoIOPIN">New Servo IO PIN:</label>
                <input type="text" id="new-servoIOPIN" name="newservoIOPIN" required>
                <input type="submit" value="Change Servo IO PIN">
            </form>
        </div>


        <!-- SERVO max angle Change Form -->
        <div class="form-section">
            <h3>Change Servo MAX TRAVEL ANGLE (Typ :180 degrees)</h3>
            <form action="/change-servoMAXAngle" method="post">
                <label for="new-servoMAXAngle">New Servo MAX Travel Angle:</label>
                <input type="text" id="new-servoMAXAngle" name="newservoMAXAngle" required>
                <input type="submit" value="Change Servo MAX Travel Angle">
            </form>
        </div>

        <!-- SERVO rest angle Change Form -->
        <div class="form-section">
            <h3>Change Servo at REST ANGLE (Typ :90 degrees)</h3>
            <form action="/change-servoRESTAngle" method="post">
                <label for="new-servoRESTAngle">New Servo REST Angle:</label>
                <input type="text" id="new-servoRESTAngle" name="newservoRESTAngle" required>
                <input type="submit" value="Change Servo REST Angle">
            </form>
        </div>

        <!-- SERVO action angle Change Form -->
        <div class="form-section">
            <h3>Change Servo at Action ANGLE (Typ :120 degrees)</h3>
            <form action="/change-servoActionAngle" method="post">
                <label for="new-servoActionAngle">New Servo Action Angle:</label>
                <input type="text" id="new-servoActionAngle" name="newservoActionAngle" required>
                <input type="submit" value="Change Action Angle">
            </form>
        </div>

        <!-- SERVO action dela Change Form -->
        <div class="form-section">
            <h3>Change Servo at Action delay (Typ :100 mili sec)</h3>
            <form action="/change-servoActionDelay" method="post">
                <label for="new-servoActionDelay">New Servo Action delay:</label>
                <input type="text" id="new-servoActionDelay" name="newservoActionDelay" required>
                <input type="submit" value="Change Action delay">
            </form>
        </div>

        <!-- Device ID Form -->
        <div class="form-section">
            <h3>Change AIOT Device ID</h3>
            <form action="/change-deviceID" method="post">
                <label for="new-deviceID">New AIOT Device ID:</label>
                <input type="text" id="new-deviceID" name="newdeviceID" required>
                <input type="submit" value="Change AIOT Device ID">
            </form>
        </div>

        <!-- Device SECRET ID Form -->
        <div class="form-section">
            <h3>Change AIOT Device Secret ID</h3>
            <form action="/change-secretID" method="post">
                <label for="new-secretID">New AIOT Device Secret ID:</label>
                <input type="text" id="new-secretID" name="newsecretID" required>
                <input type="submit" value="Change AIOT Device Secret ID">
            </form>
        </div>

        <div class="footer">
            <a href="/">Home</a>
            <a href="/settings.htm">Settings</a>
            <a href="/status.htm">Status</a>
        </div>
    </div>


    <script>

        const hostElement = document.getElementById("new-hostname");
        hostElement.value = devHostname;

        const blueElement = document.getElementById("new-bluename");
        blueElement.value = devBlueName;


        const servoIOPINElement = document.getElementById("new-servoIOPIN");
        servoIOPINElement.value = servoIOPIN;

        const servoMAXAngleElement = document.getElementById("new-servoMAXAngle");
        servoMAXAngleElement.value = servoMAXAngle;

        const servoRESTAngleElement = document.getElementById("new-servoRESTAngle");
        servoRESTAngleElement.value = servoRESTAngle;

        const servoActionAngleElement = document.getElementById("new-servoActionAngle");
        servoActionAngleElement.value = servoActionAngle;

        const servoActionDelayElement = document.getElementById("new-servoActionDelay");
        servoActionDelayElement.value = servoActionDelay;

        const deviceIDElement = document.getElementById("new-deviceID");
        deviceIDElement.value = deviceID;

        const secretIDElement = document.getElementById("new-secretID");
        secretIDElement.value = secretID;

    </script>



</body>

</html>