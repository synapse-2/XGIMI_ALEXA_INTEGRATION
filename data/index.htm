<!DOCTYPE html>
<html lang="en">

<!-- Load the file with globals first as a classic script -->
<script src="/globals.js"></script>

<!-- Load the main script as a module so it can access the globals -->
<script type="module" src="/script.js"></script>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Alexa - Blutooth TV Remote</title>

    <!-- Link to the external CSS file -->
    <link rel="stylesheet" href="/remote.css">

</head>

<body>
    <div class="remote-container">
        <!-- New status bar for icons -->
        <div class="status-bar">
            <div></div>
            <span class="status-text">
                <h1 id="main-heading">TV Remote</h1>
            </span>
            <script>
                const mainHeadingElement = document.getElementById("main-heading");
                mainHeadingElement.textContent = "TV Remote : " + headingTxt;
            </script>
            <div id="Wifi-icon" class="wifi-icon wifi-low">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <!-- Separate paths with space between each bar -->
                    <!-- Smallest bar (dot) -->
                    <path class="bar-1" fill="#000000" d="M12 19c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" />
                    <!-- Second bar -->
                    <path class="bar-2" fill="#000000"
                        d="M12 15c-3.31 0-6 2.69-6 6h2c0-2.21 1.79-4 4-4s4 1.79 4 4h2c0-3.31-2.69-6-6-6z" />
                    <!-- Third bar -->
                    <path class="bar-3 fill=" #000000"
                        d="M12 11c-5.52 0-10 4.48-10 10h2c0-4.41 3.59-8 8-8s8 3.59 8 8h2c0-5.52-4.48-10-10-10z" />
                    <!-- Largest bar -->
                    <path class="bar-4" fill="#000000"
                        d="M12 7c-7.73 0-14 6.27-14 14h2c0-6.63 5.37-12 12-12s12 5.37 12 12h2c0-7.73-6.27-14-14-14z" />
                    <title id="wifi-title">Arduino IOT connected</title>
                </svg>
            </div>
            <svg id="bluetooth-icon" class="status-icon bt-advertising" xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                stroke-linejoin="round">
                <title>Blue = Connected; Yellow = Advertising</title>
                <path d="M7 7l10 10-5 5V2l5 5L7 17" />
            </svg>
        </div>
        <div class="remote-grid">
            <div class="power-settings-group">
                <button class="remote-button button-power" onclick="sendCommand('power')" aria-label="power">
                    <svg class="power-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path
                            d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8zM11 7h2v6h-2z" />
                        <title>Power</title>
                    </svg>
                </button>
                <button class="settings-button" onclick="sendCommand('setting')" aria-label="Settings">
                    <svg class="gear-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="12" r="3"></circle>
                        <path
                            d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1.51-1V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z">
                        </path>
                        <title>Settings</title>
                    </svg>
                </button>
            </div>

            <div class="nav-dpad">
                <button class="remote-button button-up" onclick="sendCommand('nav_up')">Up</button>
                <button class="remote-button button-left" onclick="sendCommand('nav_left')">Left</button>
                <button class="remote-button button-ok" onclick="sendCommand('nav_ok')">OK</button>
                <button class="remote-button button-right" onclick="sendCommand('nav_right')">Right</button>
                <button class="remote-button button-down" onclick="sendCommand('nav_down')">Down</button>
            </div>

            <!-- New grid for channel and volume buttons -->
            <div class="channel-volume-group">
                <button class="remote-button" onclick="sendCommand('channel_up')" aria-label="Channel Up">
                    <svg class="channel-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                        fill="currentColor">
                        <path
                            d="M12 21a9 9 0 1 1 9-9c0 4.96-4.04 9-9 9zM12 4a8 8 0 1 0 8 8 8 8 0 0 0-8-8zM11 13H8v-2h3V8h2v3h3v2h-3v3h-2v-3z" />
                        <title>Channel Up</title>
                    </svg>
                </button>
                <button class="remote-button" onclick="sendCommand('channel_down')" aria-label="Channel Down">
                    <svg class="channel-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                        fill="currentColor">
                        <path
                            d="M12 3a9 9 0 1 1-9 9c0-4.96 4.04-9 9-9zM12 20a8 8 0 1 0-8-8 8 8 0 0 0 8 8zM16 11h-8v2h8v-2z" />
                        <title>Channel Down</title>
                    </svg>
                </button>
               <!--  <span class="empty-cell"></span> -->
		
    <button class="remote-button projector-button" onclick="sendCommand('projector_settings')" aria-label="Projector Settings">
        <svg class="projector-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <!-- Box shape -->
            <path d="M5 3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5zm0 2h14v14H5V5z" />
            <!-- Plus sign -->
            <path d="M11 7h2v4h4v2h-4v4h-2v-4H7v-2h4z" />
        </svg>
        <title>Projector Settings</title>
    </button>

                <button class="remote-button" onclick="sendCommand('volume_up')" aria-label="Volume Up">
                    <svg class="volume-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path
                            d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1-3.29-2.5-4.03v8.05c1.5-.74 2.5-2.26 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z" />
                        <title>Volume Up</title>
                    </svg>
                </button>
                <button class="remote-button" onclick="sendCommand('volume_down')" aria-label="Volume Down">
                    <svg class="volume-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path
                            d="M18.5 12c0-1.77-1-3.29-2.5-4.03v8.05c1.5-.74 2.5-2.26 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z" />
                        <title>Volume Down</title>
                    </svg>
                </button>
            </div>



            <div class="remote-button-group media-controls">
                <!-- Back button with integrated SVG icon -->
                <button class="remote-button back-button" onclick="sendCommand('back')" aria-label="Back">
                    <svg class="back-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                        <title>Back</title>
                    </svg>
                </button>
                <!-- Menu button with integrated SVG icon -->
                <button class="remote-button menu-button" onclick="sendCommand('menu')" aria-label="Menu">
                    <svg class="menu-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M3 18h18v-2H3v2zM3 13h18v-2H3v2zM3 6v2h18V6H3z" />
                        <title>Options</title>
                    </svg>
                </button>
                <!-- Home button with integrated SVG icon -->
                <button class="remote-button home-button" onclick="sendCommand('home')" aria-label="Home">
                    <svg class="home-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" />
                        <title>Home</title>
                    </svg>
                </button>
            </div>
        </div>

        <div class="footer">
            <a href="/settings.htm">Settings</a>
            <a href="/status.htm">Status</a>
        </div>
        <div id="error-message" style="color: red; font-weight: bold;"></div>

        <script>
            /**
             * Sends a command to the ESP32 server.
             * @param {string} command - The command string to send (e.g., 'power', 'volume_up').
             */
            function sendCommand(command) {


                fetch(`./remote-action?cmd=${command}`, {
                    signal: AbortSignal.timeout(5000)
                })
                    .then((response) => {
                        if (!response.ok) { // Don't forget this part!
                            throw new Error(`HTTP error ${response.status}`);
                        }
                        return response.text();
                    })
                    .then((responseData) => {
                        console.log("txt:", responseData);
                        const answer = JSON.parse(responseData);
                        if (answer.success == false) {
                            document.getElementById('error-message').textContent = answer.message;
                        } else {
                            document.getElementById('error-message').textContent = '';
                        }
                    })
                    .catch(error => {
                        console.error('Failed to fetch:', error);
                        document.getElementById('error-message').textContent = '⚠️ Failed to send command. ERROR:' + error.textContent;
                    });
            }


        </script>

</body>

</html>